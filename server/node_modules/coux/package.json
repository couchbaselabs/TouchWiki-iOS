{
  "name": "coux",
  "description": "JSON REST API client with CouchDB skills, also has browser version",
  "homepage": "http://github.com/jchris/coux",
  "version": "0.1.5",
  "author": {
    "name": "J Chris Anderson",
    "email": "jchris@couchbase.com",
    "url": "http://jchrisa.net"
  },
  "contributors": [],
  "bugs": {
    "mail": "jchris@couchbase.com",
    "url": "http://github.com/jchris/coux/issues"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.2.0"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "main": "./lib/coux-request",
  "dependencies": {
    "request": "2.x"
  },
  "readme": "# Coux, pronounced \"Couch\"\n\nCoux is the least amount of CouchDB client I can imagine. It doesn't do much, but it is relaxing.\n\n## Usage\n\nThe only thing worth noting is that for coux, arrays are a perfectly good way to specify paths. And it'll do the URL encoding for you.\n\n```javascript\nvar db = \"http://jchris.iriscouch.com/foobar\";\n\n// Get database info:\ncoux(db, function(err, info) {\n  console.log(info)\n})\n\n// Get a document:\ncoux([db, \"mydocid\"], function(err, doc) {\n  console.log(doc)\n  // Update a document:\n  doc.updated_by = \"yours truly\";\n  coux.put([db, \"mydocid\"], doc, function(err, ok) {\n    console.log(ok)\n  })\n})\n\n// Create a document letting the server assign the id:\nvar newDoc = {foo : \"bar\"};\ncoux.post(db, , function(err, ok) {\n  console.log(ok)\n  \n  // Delete a document without sending the doc body\n  coux.del([db, ok.id, {rev : ok.rev}], function(err, ok) {\n    console.log(ok);\n  })\n})\n```\n\nEnjoy!",
  "readmeFilename": "README.md",
  "_id": "coux@0.1.5",
  "_from": "coux"
}
